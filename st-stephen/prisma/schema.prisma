// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Class {
  id        String          @id @default(cuid())
  name      String
  level     Int
  slug      String         @unique
  createdAt DateTime       @default(now())
  updatedAt DateTime       @updatedAt
  subjects  ClassSubject[]
}

model Subject {
  id          String          @id @default(cuid())
  name        String         @unique
  imageUrl    String
  classes     ClassSubject[]
  assignments Assignment[]
  createdAt   DateTime       @default(now())
  updatedAt   DateTime       @updatedAt
}

// Junction table for many-to-many relationship
model ClassSubject {
  id        String   @id @default(cuid())
  classId   String
  subjectId String
  class     Class    @relation(fields: [classId], references: [id])
  subject   Subject  @relation(fields: [subjectId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@unique([classId, subjectId])
}

model Assignment {
  id        String     @id @default(cuid())
  title     String
  subjectId String
  subject   Subject    @relation(fields: [subjectId], references: [id])
  questions Question[]
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
}

model Question {
  id           String     @id @default(cuid())
  content      String
  answer       String
  assignmentId String
  assignment   Assignment @relation(fields: [assignmentId], references: [id])
  createdAt    DateTime   @default(now())
  updatedAt    DateTime   @updatedAt
}
